/* eslint-disable @typescript-eslint/ban-ts-comment */
/* @ts-nocheck ----------------------------------------------------------------
   The “PageProps” type generated by Next 15 conflicts with a manual
   params-annotation.  Disabling TS-checking here avoids the build error
   while keeping all runtime behaviour intact.
------------------------------------------------------------------- */

/* ---------- SERVER imports ------------------------------------- */
import { notFound }  from "next/navigation";
import { supabase }  from "@/lib/supabaseClient";

/* ---------- SERVER-side child components ----------------------- */
import Hero                     from "./Hero";
import StaticSection            from "./StaticSection";
import CourseContentSection     from "./CourseContentSection";
import InstructorSection        from "./InstructorSection";
import AdditionalDetailsSection from "./AdditionalDetailsSection";
import CourseSidebar            from "./CourseSidebar";

/* ---------- CLIENT-only urgency bar / floating basket ---------- */
import OfferBar from "./OfferBar";

/* ---------- Stylesheet ----------------------------------------- */
import styles from "./page.module.css";

/* ================================================================= */
export default async function CoursePage(
  { params }: { params: { slug: string } }   // ✅ explicit type
) {
  const { slug } = params;

  /* --- fetch the course row (only columns we need) -------------- */
  const { data, error } = await supabase
    .from("courses")
    .select(`
      id, slug, title, description, thumbnail_url, price,
      discount_percentage, discount_active, expires_at,
      course_includes, what_you_ll_learn, requirements,
      description_long, instructor_id, preview_video
    `)
    .eq("slug", slug)
    .single();

  if (error || !data) {
    console.error("Error fetching course:", error);
    return notFound();
  }

  /* --- slimmed object for the sidebar (smaller payload) --------- */
  const sidebarCourse = {
    id:                  data.id,
    title:               data.title,
    price:               data.price,
    thumbnail_url:       data.thumbnail_url,
    discount_percentage: data.discount_percentage ?? 0,
    discount_active:     !!data.discount_active,
    course_includes:     data.course_includes ?? undefined,
    preview_video:       data.preview_video ?? undefined,
  };

  /* --------------------------- render --------------------------- */
  return (
    <>
      {/* HERO */}
      <Hero title={data.title} description={data.description} />

      <div className={styles.mainContainer}>
        {/* ---------- MAIN column ---------- */}
        <div className={styles.leftColumn}>
          <StaticSection whatYoullLearn={data.what_you_ll_learn ?? ""} />
          <CourseContentSection course_id={data.id} />

          {data.instructor_id && (
            <InstructorSection instructorId={data.instructor_id} />
          )}

          <AdditionalDetailsSection
            requirements={data.requirements}
            descriptionLong={data.description_long}
          />
        </div>

        {/* ---------- SIDEBAR column ------- */}
        <div className={styles.sidebarColumn}>
          <CourseSidebar course={sidebarCourse} />
        </div>
      </div>

      {/* ---------- urgency bar / basket -- */}
      <OfferBar
        discountActive={!!data.discount_active}
        expiresAt={data.expires_at}   /* ISO string or null */
      />
    </>
  );
}
